{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      // Créer un objet contenant les données d'authentification\n      const credentials = {\n        email: this.email,\n        password: this.password\n      };\n      try {\n        // Envoyer les données d'authentification au serveur JSON (dans ce cas, on suppose que le chemin d'accès est correct)\n        const response = await axios.get('http://localhost:3000/user?email=' + credentials.email);\n\n        // Vérifiez si un utilisateur avec cet e-mail a été trouvé\n        if (response.data.length === 1) {\n          const user = response.data[0];\n\n          // Vérifiez si le mot de passe correspond\n          if (user.password === credentials.password) {\n            // Authentification réussie, redirigez l'utilisateur vers la page de succès\n            this.$router.push({\n              name: 'HomePage'\n            });\n          } else {\n            // Mot de passe incorrect, affichez un message d'erreur\n            console.error('Mot de passe incorrect');\n          }\n        } else {\n          // Aucun utilisateur avec cet e-mail trouvé, affichez un message d'erreur\n          console.error('Utilisateur non trouvé');\n        }\n      } catch (error) {\n        // Gérez les erreurs ici\n        console.error('Échec de l\\'authentification:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","methods","login","credentials","response","get","length","user","$router","push","console","error"],"sources":["/Users/lilyaan/Desktop/resto/src/components/Login.vue"],"sourcesContent":["<template>\n  <img class=\"logo\" src=\"../assets/restologo.webp\" alt=\"Logo du resto\">\n  <h1>LogIn</h1>\n  <div class=\"login\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" v-model=\"email\" id=\"email\" name=\"email\" />\n\n    <label for=\"password\">Password</label>\n    <input type=\"password\" v-model=\"password\" id=\"password\" name=\"password\" />\n\n    <button @click=\"login\">LogIn</button>\n    <p>\n      <router-link to=\"/sign-up\">SignUp</router-link>\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n    };\n  },\n  methods: {\n  async login() {\n    // Créer un objet contenant les données d'authentification\n    const credentials = {\n      email: this.email,\n      password: this.password,\n    };\n\n    try {\n      // Envoyer les données d'authentification au serveur JSON (dans ce cas, on suppose que le chemin d'accès est correct)\n      const response = await axios.get('http://localhost:3000/user?email=' + credentials.email);\n\n      // Vérifiez si un utilisateur avec cet e-mail a été trouvé\n      if (response.data.length === 1) {\n        const user = response.data[0];\n\n        // Vérifiez si le mot de passe correspond\n        if (user.password === credentials.password) {\n          // Authentification réussie, redirigez l'utilisateur vers la page de succès\n          this.$router.push({name : 'HomePage'});\n        } else {\n          // Mot de passe incorrect, affichez un message d'erreur\n          console.error('Mot de passe incorrect');\n        }\n      } else {\n        // Aucun utilisateur avec cet e-mail trouvé, affichez un message d'erreur\n        console.error('Utilisateur non trouvé');\n      }\n    } catch (error) {\n      // Gérez les erreurs ici\n      console.error('Échec de l\\'authentification:', error);\n    }\n  },\n},\n}\n\n</script>\n"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,KAAKA,CAAA,EAAG;MACZ;MACA,MAAMC,WAAU,GAAI;QAClBJ,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MAED,IAAI;QACF;QACA,MAAMI,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAkC,GAAIF,WAAW,CAACJ,KAAK,CAAC;;QAEzF;QACA,IAAIK,QAAQ,CAACN,IAAI,CAACQ,MAAK,KAAM,CAAC,EAAE;UAC9B,MAAMC,IAAG,GAAIH,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC;;UAE7B;UACA,IAAIS,IAAI,CAACP,QAAO,KAAMG,WAAW,CAACH,QAAQ,EAAE;YAC1C;YACA,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC;cAACZ,IAAG,EAAI;YAAU,CAAC,CAAC;UACxC,OAAO;YACL;YACAa,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;UACzC;QACF,OAAO;UACL;UACAD,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACzC;MACF,EAAE,OAAOA,KAAK,EAAE;QACd;QACAD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;EACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}