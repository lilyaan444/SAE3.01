{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      // Créer un objet contenant les données d'authentification\n      const credentials = {\n        email: this.email,\n        password: this.password\n      };\n      try {\n        // Envoyer les données d'authentification au serveur JSON\n        const response = await axios.post('http://localhost:3000/user', credentials);\n\n        // Si l'authentification est réussie, le serveur renverra une réponse appropriée\n        // Vous pouvez mettre en place la logique de redirection ou d'affichage en fonction de la réponse ici\n\n        // Exemple de redirection vers une page de succès\n        this.$router.push({\n          name: 'HomePage'\n        });\n      } catch (error) {\n        // En cas d'échec de l'authentification, vous pouvez gérer les erreurs ici\n        console.error('Échec de l\\'authentification:', error);\n        // Afficher un message d'erreur à l'utilisateur si nécessaire\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","methods","login","credentials","response","post","$router","push","error","console"],"sources":["/Users/lilyaan/Desktop/resto/src/components/Login.vue"],"sourcesContent":["<template>\n  <img class=\"logo\" src=\"../assets/restologo.webp\" alt=\"Logo du resto\">\n  <h1>LogIn</h1>\n  <div class=\"login\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" v-model=\"email\" id=\"email\" name=\"email\" />\n\n    <label for=\"password\">Password</label>\n    <input type=\"password\" v-model=\"password\" id=\"password\" name=\"password\" />\n\n    <button @click=\"login\">LogIn</button>\n    <p>\n      <router-link to=\"/sign-up\">SignUp</router-link>\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n    };\n  },\n  methods: {\n    async login() {\n      // Créer un objet contenant les données d'authentification\n      const credentials = {\n        email: this.email,\n        password: this.password,\n      };\n\n      try {\n        // Envoyer les données d'authentification au serveur JSON\n        const response = await axios.post('http://localhost:3000/user', credentials);\n\n        // Si l'authentification est réussie, le serveur renverra une réponse appropriée\n        // Vous pouvez mettre en place la logique de redirection ou d'affichage en fonction de la réponse ici\n\n        // Exemple de redirection vers une page de succès\n        this.$router.push({name : 'HomePage'});\n      } catch (error) {\n        // En cas d'échec de l'authentification, vous pouvez gérer les erreurs ici\n        console.error('Échec de l\\'authentification:', error);\n        // Afficher un message d'erreur à l'utilisateur si nécessaire\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ;MACA,MAAMC,WAAU,GAAI;QAClBJ,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MAED,IAAI;QACF;QACA,MAAMI,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,4BAA4B,EAAEF,WAAW,CAAC;;QAE5E;QACA;;QAEA;QACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;UAACV,IAAG,EAAI;QAAU,CAAC,CAAC;MACxC,EAAE,OAAOW,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD;MACF;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}